{"version":3,"sources":["../node_modules/@uniswap/widgets/dist/locales lazy /^/.//.*/.js$/ groupOptions: {} namespace object","context/actionNames.js","context/TokensContext.jsx","context/TokenContext.jsx","context/ThemeContext.jsx","components/Loader/styles.jsx","components/Loader/Loader.jsx","components/Modal/styles.jsx","components/Modal/Modal.jsx","utils/formatNumber.js","components/Card/styles.jsx","components/Card/Card.jsx","components/PairCard/styles.js","components/Button/styles.jsx","components/Button/Button.jsx","components/PairCard/PairCard.jsx","components/PairList/styles.js","components/PairList/PairList.jsx","components/Sidebar/styles.jsx","components/NavButtons/styles.jsx","assets/bitcoin.png","components/Sidebar/Sidebar.jsx","components/Layout/Layout.jsx","context/PairsContext.jsx","components/BarCharts/BarCharts.jsx","components/FlexContainer/styles.jsx","components/FlexContainer/FlexContainer.jsx","components/RecentSwaps/queries.js","components/RecentSwaps/styles.js","components/RecentSwaps/RecentSwaps.jsx","views/PairAggregate/queries.js","views/PairAggregate/styles.js","components/Select/styles.jsx","components/TokenCard/styles.jsx","components/TokenCard/TokenCard.jsx","components/TokenCardList/queries.js","components/TokenCardList/styles.js","components/TokenCardList/TokenCardList.jsx","components/TokenTable/TokenTable.jsx","views/Tokens/queries.js","views/Tokens/styles.jsx","components/TokenChart/queries.js","components/Chart/Chart.jsx","components/TokenChart/TokenChart.jsx","components/TokenPairs/queries.js","components/TokenPairs/TokenPairs.jsx","views/TokenAggregate/styles.jsx","views/TokenAggregate/queries.js","components/PairTable/PairTable.jsx","views/Pairs/queries.js","views/Pairs/styles.jsx","index.js","views/Pairs/Pairs.jsx","views/PairAggregate/PairAggregate.jsx","views/Tokens/index.jsx","views/TokenAggregate/TokenAggregate.jsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","setFilterBy","setSortBy","setItemsOnPage","setSelectedPair","setSelectedToken","TokensContext","React","createContext","INITIAL_STATE","filterBy","sortBy","itemsOnPage","selectedToken","reducer","state","action","type","payload","TokensContextProvider","children","useReducer","dispatch","Provider","value","TokenContext","TokenContextProvider","tokenId","setData","themes","dark","color","light","ThemeContext","ThemeContextProvider","useState","theme","setTheme","toggleTheme","Loader","styled","div","BarLoader","ModalWrapper","motion","ModalBackdrop","ModalBox","Modal","forwardRef","props","ref","display","setDisplay","useImperativeHandle","openModal","open","close","ReactDOM","createPortal","onClick","variants","hidden","y","opacity","show","document","getElementById","formatNumber","x","toString","replace","Card","transparent","height","CardInner","isActive","className","initial","animate","exit","PoolCard","PoolCardInner","Button","width","PairCard","pair","modalRef","useRef","console","log","defaultInputTokenAddress","token0","defaultOutputTokenAddress","token1","darkTheme","symbol","parseInt","volumeUSD","current","PoolGrid","PairList","data","pairs","to","Sidebar","nav","useHistory","isSidebarOpen","setIsSidebarOpen","sidebarItems","title","icon","Tokens","url","useParams","item","Layout","useContext","PairsContext","selectedPair","PairsContextProvider","BarCharts","chartData","selectedFilter","setSelectedFilter","name","filter","i","ResponsiveContainer","BarChart","XAxis","dataKey","milliseconds","date","Date","toISOString","split","YAxis","Tooltip","Legend","Bar","fill","StyledFlexContainer","FlexContainer","RECENT_SWAPS","gql","TxTable","table","TxRow","tr","RecentSwaps","useQuery","variables","loading","error","message","animatedItem","transition","staggerChildren","swaps","swap","amountUSD","href","target","rel","PAIR_AGGREGATE","AggregateGrid","AggregateLeft","PairSpecs","InfoCard","TokenCard","token","tokensState","index","toUpperCase","parseFloat","tradeVolumeUSD","toFixed","TOKENS","TokenGrid","container","TokenCardList","order","tokens","TokenTable","tableData","columns","useMemo","Header","accessor","row","tradeVolume","txCount","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","style","borderBottom","fontWeight","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","padding","FlexSpaced","TOKEN_DETAILS","Chart","yKey","xKey","yKey1","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","stroke","axisLine","tickLine","domain","datakey","tickCount","TokenChart","numberOfItems","tokenState","tokenDayDatas","TOKEN_PAIRS","TokenPairs","TokenAggregateGrid","LeftTopGrid","LeftGrid","DetailsGrid","DetailsGridItem","PairTable","reserveETH","reserveUSD","pairState","pairDispatch","PAIRS","client","ApolloClient","uri","cache","InMemoryCache","routes","path","component","text","viewType","setViewType","route","RouteWithSubRoutes","pairID","useEffect","pairDayDatas","reserve0","reserve1","dailyVolumeToken0","yValue1","yValue2","dailyVolumeToken1","tokenID","window","scrollTo","top","left","behavior","totalLiquidity","src","alt","ApolloProvider"],"mappings":"2NAAA,IAAIA,EAAM,CACT,aAAc,CACb,IACA,GAED,aAAc,CACb,IACA,GAED,aAAc,CACb,IACA,GAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,cAAe,CACd,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,IAED,aAAc,CACb,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,IAGD,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBS,EAC5B,GACD,CACAX,EAAoBY,KAAO,WAC1B,OAAOC,OAAOD,KAAKb,EACpB,EACAC,EAAoBW,GAAK,IACzBG,EAAOC,QAAUf,C,8LCxJJgB,EAAc,cACdC,EAAY,YACZC,EAAiB,iBACjBC,EAAkB,kBAClBC,EAAmB,mB,OCInBC,EAAgBC,IAAMC,gBAE7BC,EAAgB,CACpBC,SAAU,iBACVC,OAAQ,OACRC,YAAa,IACbC,cAAe,8CAGV,SAASC,EAAQC,EAAOC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","file":"static/js/main.86d4af77.chunk.js","sourcesContent":["var map = {\n\t\"./af-ZA.js\": [\n\t\t826,\n\t\t7\n\t],\n\t\"./ar-SA.js\": [\n\t\t827,\n\t\t8\n\t],\n\t\"./ca-ES.js\": [\n\t\t828,\n\t\t9\n\t],\n\t\"./cs-CZ.js\": [\n\t\t829,\n\t\t10\n\t],\n\t\"./da-DK.js\": [\n\t\t830,\n\t\t11\n\t],\n\t\"./de-DE.js\": [\n\t\t831,\n\t\t12\n\t],\n\t\"./el-GR.js\": [\n\t\t832,\n\t\t13\n\t],\n\t\"./en-US.js\": [\n\t\t833,\n\t\t14\n\t],\n\t\"./es-ES.js\": [\n\t\t834,\n\t\t15\n\t],\n\t\"./fi-FI.js\": [\n\t\t835,\n\t\t16\n\t],\n\t\"./fr-FR.js\": [\n\t\t836,\n\t\t17\n\t],\n\t\"./he-IL.js\": [\n\t\t837,\n\t\t18\n\t],\n\t\"./hu-HU.js\": [\n\t\t838,\n\t\t19\n\t],\n\t\"./id-ID.js\": [\n\t\t839,\n\t\t20\n\t],\n\t\"./it-IT.js\": [\n\t\t840,\n\t\t21\n\t],\n\t\"./ja-JP.js\": [\n\t\t841,\n\t\t22\n\t],\n\t\"./ko-KR.js\": [\n\t\t842,\n\t\t23\n\t],\n\t\"./nl-NL.js\": [\n\t\t843,\n\t\t24\n\t],\n\t\"./no-NO.js\": [\n\t\t844,\n\t\t25\n\t],\n\t\"./pl-PL.js\": [\n\t\t845,\n\t\t26\n\t],\n\t\"./pseudo.js\": [\n\t\t846,\n\t\t27\n\t],\n\t\"./pt-BR.js\": [\n\t\t847,\n\t\t28\n\t],\n\t\"./pt-PT.js\": [\n\t\t848,\n\t\t29\n\t],\n\t\"./ro-RO.js\": [\n\t\t849,\n\t\t30\n\t],\n\t\"./ru-RU.js\": [\n\t\t850,\n\t\t31\n\t],\n\t\"./sr-SP.js\": [\n\t\t851,\n\t\t32\n\t],\n\t\"./sv-SE.js\": [\n\t\t852,\n\t\t33\n\t],\n\t\"./sw-TZ.js\": [\n\t\t853,\n\t\t34\n\t],\n\t\"./tr-TR.js\": [\n\t\t854,\n\t\t35\n\t],\n\t\"./uk-UA.js\": [\n\t\t855,\n\t\t36\n\t],\n\t\"./vi-VN.js\": [\n\t\t856,\n\t\t37\n\t],\n\t\"./zh-CN.js\": [\n\t\t857,\n\t\t38\n\t],\n\t\"./zh-TW.js\": [\n\t\t858,\n\t\t39\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 659;\nmodule.exports = webpackAsyncContext;","export const setFilterBy = \"setFilterBy\";\nexport const setSortBy = \"setSortBy\";\nexport const setItemsOnPage = \"setItemsOnPage\";\nexport const setSelectedPair = \"setSelectedPair\";\nexport const setSelectedToken = \"setSelectedToken\";\n","import React from \"react\";\nimport {\n  setFilterBy,\n  setSortBy,\n  setItemsOnPage,\n  setSelectedToken,\n} from \"./actionNames\";\n\nexport const TokensContext = React.createContext();\n\nconst INITIAL_STATE = {\n  filterBy: \"tradeVolumeUSD\",\n  sortBy: \"desc\",\n  itemsOnPage: 150,\n  selectedToken: \"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\n};\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case setFilterBy:\n      return {\n        ...state,\n        filterBy: action.payload,\n      };\n    case setSortBy:\n      return {\n        ...state,\n        sortBy: action.payload,\n      };\n    case setItemsOnPage:\n      return {\n        ...state,\n        itemsOnPage: action.payload,\n      };\n    case setSelectedToken:\n      return {\n        ...state,\n        selectedToken: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\n\n\n\nexport function TokensContextProvider({ children }) {\n  const [state, dispatch] = React.useReducer(reducer, {\n    ...INITIAL_STATE,\n  });\n\n  return (\n    <TokensContext.Provider value={{ state, dispatch }}>\n      {children}\n    </TokensContext.Provider>\n  );\n}\n","import * as React from \"react\";\n\nexport const TokenContext = React.createContext();\n\n//FIXME: useReducer ?? redux ?? \nexport const TokenContextProvider = ({ children }) => {\n  const [{ tokenId, filterBy }, setData] = React.useState({\n    tokenId: \"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\n    filterBy: \"tradeVolumeUSD\",\n  });\n  return (\n    <TokenContext.Provider value={{ tokenId, filterBy, setData }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n","import React from 'react'\nexport const themes = {\n    dark : {\n        // backgroundColor: \"black\",\n        color: \"white\",\n    },\n    light: {\n        // backgroundColor: \"white\",\n        color: \"black\",\n    }\n}\nexport const ThemeContext = React.createContext();\nexport const ThemeContextProvider = ({ children }) => {\n\n  const [ theme,  setTheme] = React.useState(themes.dark);\n  const toggleTheme = () => {\n    theme === themes.dark ? setTheme(themes.light) : setTheme(themes.dark);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme,  themes, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Loader = styled.div`\n  padding: 1rem 0;\n`;\n","import React from \"react\";\nimport { BarLoader } from \"react-spinners\";\nimport * as Styled from \"./styles\";\nexport const Loader = () => {\n  return (\n    <Styled.Loader>\n      <BarLoader color=\"#828bdd\" />\n    </Styled.Loader>\n  );\n};\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\n\nexport const ModalWrapper = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nexport const ModalBackdrop = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  backdrop-filter: blur(5px);\n  background-color: rgba(0, 0, 0, 0.3);\n`;\nexport const ModalBox = styled(motion.div)`\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  min-height: 30%;\n  width: fit-content;\n  overflow-y: auto;\n  height: fit-content;\n  background-color: var(--transparent-black-dark);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  backdrop-filter: blur(5px);\n  z-index: 101;\n  /* padding: 40px; */\n`;\n","import React, { forwardRef, useImperativeHandle } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Styled from \"./styles\";\n\nconst Modal = forwardRef((props, ref) => {\n  const [display, setDisplay] = React.useState(false);\n\n  useImperativeHandle(ref, () => {\n    return {\n      openModal: () => open(),\n      close: () => close(),\n    };\n  });\n\n  const open = () => {\n    setDisplay(true);\n  };\n\n  const close = () => {\n    setDisplay(false);\n  };\n  const animatedItem = {\n    hidden: { y: -100, opacity: 0 },\n    show: { y: 0, opacity: 1 },\n  };\n\n  if (display) {\n    return ReactDOM.createPortal(\n      <Styled.ModalWrapper>\n        <Styled.ModalBackdrop onClick={close} />\n        <Styled.ModalBox variants={animatedItem}>\n          {props.children}\n        </Styled.ModalBox>\n      </Styled.ModalWrapper>,\n      document.getElementById(\"modal-root\")\n    );\n  }\n\n  return null;\n});\n\nexport default Modal;\n","function formatNumber(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default formatNumber;\n   ","import { motion } from \"framer-motion/dist/framer-motion\";\nimport styled from \"styled-components\";\n\nexport const Card = styled(motion.div)`\n  /* position: relative; */\n  transition: all 0.3s;\n  border-radius: 1rem;\n  background-clip: content-box, border-box;\n  opacity: 0.9;\n  background-color: var(--transparent-black-light);\n  background-color: ${(props) =>\n    props.transparent\n      ? \"var(--transparent-black-light)\"\n      : \"var(--transparent-black)\"};\n  border: ${(props) =>\n    props.transparent ? \"var(--border-ultra-light)\" : \"var(--border-light)\"};\n  font-size: 1rem !important;\n  font-weight: 400 !important;\n  height: ${(props) => props.height};\n  &:hover {\n    box-shadow: rgb(0 0 0 / 24%) 6px 8px 12px, rgb(0 0 0 / 24%) 6px 4px 6px,\n      rgb(0 0 0 / 32%) 2px 2px 4px;\n  }\n`;\nexport const CardInner = styled(motion.div)`\n  padding: 0.8rem;\n`;\n","import React from \"react\";\nimport * as Styled from \"./styles\";\n\nexport const Card = ({\n  children,\n  height,\n  isActive,\n  className,\n  transparent,\n}) => {\n  return (\n    <Styled.Card\n      initial={{ y: 0, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      exit={{ x: -300, opacity: 0 }}\n      className={isActive ? \"active \" : \"\"}\n      height={height}\n      transparent={transparent}\n      {...className}\n    >\n      <Styled.CardInner\n        initial={{ y: 20, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        exit={{ x: -300, opacity: 0 }}\n        height={height}\n      >\n        {children}\n      </Styled.CardInner>\n    </Styled.Card>\n  );\n};\n","import { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\nimport styled from \"styled-components\";\n\nexport const PoolCard = styled(motion.div)`\n  border-radius: 1rem;\n  width: 100%;\n  cursor: pointer;\n`;\nexport const PoolCardInner = styled(motion.div)``;\n","import styled from \"styled-components\";\n\nexport const Button = styled.div`\n  /* transform: scale(0.8); */\n  transition: all 0.2s;\n  width: ${(props) => props.width};\n  height: fit-content !important;\n  padding: 8px 0.85rem;\n  text-decoration: none;\n  border-radius: 11px;\n  display: inline-block;\n  box-sizing: border-box;\n  cursor: pointer;\n  border: 2px solid rgba(245, 245, 245, 0.3);\n  opacity: 0.9;\n  background-color: var(--transparent-black);\n  /* background-color: var(--main-color); */\n  /* color: white !important; */\n  font-size: 0.8rem !important;\n  font-weight: 400 !important;\n  text-align: center;\n  margin-right: 7px;\n\n  &:hover {\n    filter: brightness(1.3);\n  }\n  &.active {\n    font-weight: 500 !important;\n    background-color: var(--accent-purple-dark);\n  }\n`;\n","import React from \"react\";\nimport * as Styled from \"./styles\";\n\nexport const Button = ({ onClick, children, width }) => {\n  return (\n    <Styled.Button width={width} onClick={onClick}>\n      {children}\n    </Styled.Button>\n  );\n};\n","import React from \"react\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport { Card } from \"../Card/Card\";\nimport Modal from \"../Modal/Modal\";\nimport * as Styled from \"./styles\";\nimport { SwapWidget } from \"@uniswap/widgets/dist/index.js\";\n\nimport { darkTheme, lightTheme } from \"@uniswap/widgets\";\nimport { Button } from \"../Button/Button\";\n\nexport const PairCard = ({ pair }) => {\n  const animatedItem = {\n    hidden: { opacity: 0 },\n    show: { opacity: 1 },\n  };\n  const modalRef = React.useRef();\n  const openModal = () => {\n    modalRef.current.openModal();\n  };\n  console.log(\"pair \", pair);\n  return (\n    <>\n      <Modal ref={modalRef}>\n        <SwapWidget\n          defaultInputTokenAddress={pair.token0.id}\n          defaultOutputTokenAddress={pair.token1.id}\n          theme={true ? darkTheme : lightTheme}\n        />\n        {/* <button onClick={() => modalRef.current.close()}>Close Modal</button> */}\n      </Modal>\n      <Card transparent variants={animatedItem}>\n        <Styled.PoolCard key={pair.id}>\n          <Styled.PoolCardInner>\n            <div className=\"medium-text\">\n              {pair.token0.symbol} - {pair.token1.symbol}\n            </div>\n            {/* <div>{pair.txCount} Tx's</div> */}\n            <div>V: ${formatNumber(parseInt(pair.volumeUSD))}</div>\n          </Styled.PoolCardInner>\n          <Button onClick={openModal}>Trade</Button>\n        </Styled.PoolCard>\n      </Card>\n    </>\n  );\n};\n","import { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\nimport styled from \"styled-components\";\n\nexport const PoolGrid = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));\n  justify-content: center;\n  gap: 10px;\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TokensContext } from \"../../context/TokensContext\";\nimport { Loader } from \"../Loader/Loader\";\nimport Modal from \"../Modal/Modal\";\nimport { PairCard } from \"../PairCard/PairCard\";\nimport * as Styled from \"./styles\";\nimport { SwapWidget } from \"@uniswap/widgets/dist/index.js\";\n\nexport const PairList = ({ data }) => {\n  return (\n    <>\n      <Styled.PoolGrid initial=\"hidden\" animate=\"show\">\n        {data.pairs &&\n          data.pairs.map((pair) => {\n            return (\n              <Link to={`/pairs/${pair.id}`}>\n                <PairCard pair={pair} />\n              </Link>\n            );\n          })}\n      </Styled.PoolGrid>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Sidebar = styled.nav`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 90vh;\n  background-color: var(--transparent-black);\n  width: 10rem;\n  padding: 1.8rem 0.85rem;\n  color: #fff;\n  display: flex;\n  flex-direction: column;\n  transition: width 0.5s ease-in-out;\n  backdrop-filter: blur(2px);\n  transition: all 0.4s;\n  z-index: 5;\n  box-shadow: var(--box-shadow-light);\n\n  &:hover {\n    box-shadow: var(--box-shadow);\n  }\n  &.shrink {\n    width: 3.8rem;\n  }\n`;\n\nexport const SidebarLink = styled.div``;\n","import styled from \"styled-components\";\n\nexport const Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 20vh;\n  align-items: center;\n`;\n\nexport const NavFlex = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nexport const Button = styled.div`\n  border-radius: 1rem;\n  min-width: 100px;\n  text-align: center;\n  box-shadow: rgb(99 99 99 / 20%) 0px 2px 8px 0px;\n  margin-right: 0.5rem;\n  transition: all 0.2s;\n  cursor: pointer;\n  position: relative;\n  border: 2px solid rgba(148, 148, 148, 0.317);\n  padding: .5rem;\n`;\n\nexport const ActiveLink = styled.div`\n  background-color: blue;\n`;\n","export default __webpack_public_path__ + \"static/media/bitcoin.d5bf55ba.png\";","import React from \"react\";\nimport * as Styled from \"./styles\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button } from \"../Button/Button\";\nimport Tokens from \"../../assets/bitcoin.png\";\nexport const Sidebar = () => {\n  let history = useHistory();\n  const [isSidebarOpen, setIsSidebarOpen] = React.useState(false);\n\n  const toggleSidebarOpen = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const sidebarItems = [\n    // {\n    //   title: \"Home\",\n    //   icon: \"🏠\",\n    //   url: \"/\",\n    // },\n    {\n      title: \"Tokens\",\n      icon: Tokens,\n      url: \"/tokens\",\n    },\n    {\n      title: \"Pairs\",\n      icon: Tokens,\n      url: \"/pairs\",\n    },\n  ];\n  console.log(useParams());\n  return (\n    <Styled.Sidebar className={isSidebarOpen ? \"expanded\" : \"shrink\"}>\n      <div className=\"sidebar-links shits\">\n        <div>\n          <ul>\n            {/* <Button width=\"100%\" onClick={() => history.goBack()}>\n            ←{\" \"}\n          </Button> */}\n            {sidebarItems.map((item) => (\n              <li key={item.url} className=\"tooltip-element\" data-tooltip=\"1\">\n                <Link to={item.url}>\n                  <div className=\"icon\">\n                    <i className=\"bx bx-bar-chart-square\"></i>\n                    <i className=\"bx bxs-bar-chart-square\"></i>\n                  </div>\n                  <span className=\"link hide\">{item.title}</span>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div>\n          <Button onClick={toggleSidebarOpen}>←</Button>\n        </div>\n      </div>\n    </Styled.Sidebar>\n  );\n};\n\n{\n  /* <Button width=\"50px\" onClick={() => history.goBack()}>\n{item.icon}\n</Button> */\n}\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { NavButtons } from \"../NavButtons/NavButtons\";\nimport { Sidebar } from \"../Sidebar/Sidebar\";\n\nexport const Layout = ({ children }) => {\n  const { theme, themes, toggleTheme } = useContext(ThemeContext);\n  return (\n    // <div style={theme}>\n    <>\n      <Sidebar />\n      <div className=\"main container\">{children}</div>\n    </>\n\n    // </div>\n  );\n};\n","import React from \"react\";\nimport {\n  setFilterBy,\n  setSortBy,\n  setItemsOnPage,\n  setSelectedPair,\n} from \"./actionNames\";\n\nexport const PairsContext = React.createContext();\n\nconst INITIAL_STATE = {\n  filterBy: \"tradeVolumeUSD\",\n  sortBy: \"asc\",\n  itemsOnPage: 150,\n  selectedPair: \"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984\",\n};\n\nexport function reducer(state, action) {\n  switch (action.type) {\n    case setFilterBy:\n      return {\n        ...state,\n        filterBy: action.payload,\n      };\n    case setSortBy:\n      return {\n        ...state,\n        sortBy: action.payload,\n      };\n    case setItemsOnPage:\n      return {\n        ...state,\n        itemsOnPage: action.payload,\n      };\n    case setSelectedPair:\n      return {\n        ...state,\n        selectedPair: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nexport function PairsContextProvider({ children }) {\n  const [state, dispatch] = React.useReducer(reducer, {\n    ...INITIAL_STATE,\n  });\n\n  return (\n    <PairsContext.Provider value={{ state, dispatch }}>\n      {children}\n    </PairsContext.Provider>\n  );\n}\n","import React from \"react\";\nimport {\n  Bar,\n  BarChart,\n  Legend,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { Button } from \"../Button/styles\";\n\nexport const BarCharts = ({ chartData }) => {\n  // FIXME: Extract to utils\n  const getTimeAxis = (data) => {\n    const milliseconds = data.date * 1000;\n    const newDate = new Date(milliseconds);\n    const formattedDate = newDate.toISOString().split(\"T\")[0];\n    return formattedDate;\n  };\n\n  const [selectedFilter, setSelectedFilter] = React.useState(\"dailyVolumeUSD\");\n  const checkButtonActive = (id) => id === selectedFilter;\n\n  const filters = [\n    { name: \"Daily Volume\", id: \"dailyVolumeUSD\" },\n    { name: \"Daily Txns\", id: \"dailyTxns\" },\n    { name: \"Reserve\", id: \"reserveUSD\" },\n  ];\n  return (\n    <>\n      {filters.map((filter, i) => {\n        return (\n          <Button\n            isActive={filter.id === selectedFilter}\n            onClick={() => setSelectedFilter(filter.id)}\n            className={filter.id === selectedFilter ? \"active\" : \"\"}\n          >\n            {filter.name}\n          </Button>\n        );\n      })}\n      <br />\n      <br />\n      <br />\n      <ResponsiveContainer width=\"100%\" height={250}>\n        <BarChart data={chartData}>\n          {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n          <XAxis dataKey={getTimeAxis} />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          rgba(15, 53, 255, 0.3)\n          <Bar dataKey={selectedFilter} fill=\"#98a1fa\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const StyledFlexContainer = styled.div`\n  display: flex;\n`;\n","import React from \"react\";\nimport { StyledFlexContainer } from \"./styles\";\n\nexport const FlexContainer = ({ children }) => {\n  return <StyledFlexContainer>{children}</StyledFlexContainer>;\n};\n","import { gql } from \"@apollo/client\";\n\nexport const RECENT_SWAPS = gql`\n  query RecentSwaps(\n    $filter: String\n    $order: String\n    $itemsOnPage: Int\n    $id: String!\n  ) {\n    swaps(\n      first: 18\n      orderBy: timestamp\n      orderDirection: desc\n      where: { pair: $id }\n    ) {\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`;\n","import { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\nimport styled from \"styled-components\";\nexport const TxTable = styled(motion.table)`\n  table-layout: fixed;\n`;\nexport const TxRow = styled(motion.tr)`\n  font-size: 0.9rem;\n  border-radius: 1rem;\n  border: var(--border);\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport { Loader } from \"../Loader/Loader\";\nimport { RECENT_SWAPS } from \"./queries\";\nimport * as Styled from \"./styles\";\nexport const RecentSwaps = ({ id }) => {\n  const { loading, error, data } = useQuery(RECENT_SWAPS, {\n    variables: { id: id },\n  });\n\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n\n  const container = {\n    hidden: { opacity: 0 },\n    show: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.01,\n      },\n    },\n  };\n  const animatedItem = {\n    hidden: { y: 0, opacity: 0 },\n    show: { y: 0, opacity: 1 },\n  };\n\n  return (\n    <Styled.TxTable variants={container} initial=\"hidden\" animate=\"show\">\n      <tbody>\n        {data.swaps.map((swap, i) => {\n          return (\n            <Styled.TxRow key={i} variants={animatedItem}>\n              <td>$ {formatNumber(formatNumber(parseInt(swap.amountUSD)))}</td>\n              <td>{swap.pair.token0.symbol} </td>\n              <td>{swap.pair.token1.symbol} </td>\n              <td>\n                <a href=\"http://\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  Eth\n                  {/* <img\n                    style={{ height: \"20px\" }}\n                    src=\"https://etherscan.io/assets/svg/logos/logo-etherscan.svg?v=0.0.2\"\n                    alt=\"\"\n                  /> */}\n                </a>\n              </td>\n            </Styled.TxRow>\n          );\n        })}\n      </tbody>\n    </Styled.TxTable>\n  );\n};\n","import { gql } from \"@apollo/client\";\nexport const PAIR_AGGREGATE = gql`\n  query TokenDetails($id: String!) {\n    pair(id: $id) {\n      id\n      reserve0\n      reserve1\n      reserveUSD\n      liquidityProviderCount\n      volumeUSD\n      totalSupply\n      token0 {\n        symbol\n        id\n      }\n      token1 {\n        symbol\n        id\n      }\n    }\n    pairDayDatas(\n      first: 100\n      orderBy: date\n      orderDirection: desc\n      where: { pairAddress: $id, date_gt: 1592505859 }\n    ) {\n      dailyTxns\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }\n`;\n","import { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\nimport styled from \"styled-components\";\n\nexport const AggregateGrid = styled(motion.div)`\n  display: grid;\n  width: 100%;\n  gap: 10px;\n  grid-template-columns: 6fr 3fr;\n  .transparent-card:nth-of-type(1) {\n  }\n`;\nexport const AggregateLeft = styled(motion.div)`\n  display: grid;\n  gap: 10px;\n`;\n\nexport const PairSpecs = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr 1fr auto;\n  gap: 10px;\n`;\n\nexport const InfoCard = styled(motion.div)`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n","import styled from \"styled-components\";\n\nexport const Select = styled.div`\n  border-radius: 1rem;\n  text-align: center;\n  box-shadow: rgb(99 99 99 / 20%) 0px 1px 8px 0px;\n  margin-right: 0.5rem;\n  transition: all 0.2s;\n  cursor: pointer;\n  position: relative;\n  box-shadow: var(--transparent-black) 1px 1000px 1px inset;\n  border: 1px solid rgba(245, 245, 245, 0.3);\n  &:hover {\n  }\n  img {\n    margin-left: 10px;\n  }\n`;\nexport const SelectInner = styled.div`\n  padding: inherit;\n  position: absolute;\n  width: inherit;\n  top: 45px;\n  z-index: 3;\n  border-radius: 1rem;\n  border: 1px solid rgba(148, 148, 148, 0.317);\n\n  backdrop-filter: blur(1px);\n`;\nexport const SelectItem = styled.div`\n  border-radius: 0.5rem;\n  margin: 10px;\n  padding: 1rem;\n`;\nexport const Flex = styled.div`\n  padding: 8px 0.85rem;\n  justify-content: space-between;\n  display: flex;\n`;\n","import styled from \"styled-components\";\nimport { motion } from \"framer-motion/dist/framer-motion\";\n\nexport const TokenCard = styled(motion.div)`\n  cursor: pointer;\n  border-radius: 1rem;\n  font-weight: 400;\n  display: grid;\n  grid-template-columns: 2fr  5fr;\n  font-size: 0.8rem;\n  align-items: center;\n`;\n","import React, { useContext } from \"react\";\nimport { TokensContext } from \"../../context/TokensContext\";\n\nimport formatNumber from \"../../utils/formatNumber\";\nimport { Card } from \"../Card/Card\";\nimport * as Styled from \"./styles\";\nconst animatedItem = {\n  hidden: { opacity: 0 },\n  show: { opacity: 1 },\n};\nexport const TokenCard = ({ token, index }) => {\n  const { state: tokensState } = useContext(TokensContext);\n\n  return (\n    <Card isActive={tokensState.selectedToken === token.id}>\n      <Styled.TokenCard className=\"card\">\n        {/* <div className=\"symbol bold large\">{index}</div> */}\n        <div className=\"symbol bold large\">{token.symbol.toUpperCase()}</div>\n        <div className=\"symbol\">\n          $ {formatNumber(parseFloat(token.tradeVolumeUSD).toFixed(2))}\n        </div>\n      </Styled.TokenCard>\n    </Card>\n  );\n};\n","import { gql } from \"@apollo/client\";\nexport const TOKENS = gql`\n  query Tokens($filter: String, $order: String, $itemsOnPage: Int) {\n    tokens(first: $itemsOnPage, orderBy: $filter, orderDirection: $order) {\n      id\n      symbol\n      name\n      tradeVolume\n      txCount\n      tradeVolumeUSD\n      totalLiquidity\n    }\n  }\n`;\n","import { motion } from \"framer-motion/dist/framer-motion\";\nimport styled from \"styled-components\";\n\nexport const TokenGrid = styled(motion.div)`\n  padding: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-columns: repeat(auto-fit, minmax(290px, 1fr));\n  grid-gap: 10px;\n  height: 70vh;\n`;\n","import { useQuery } from \"@apollo/client\";\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TokensContext } from \"../../context/TokensContext\";\nimport { TokenCard } from \"../TokenCard/TokenCard\";\nimport { TOKENS } from \"./queries\";\nimport * as Styled from \"./styles\";\nimport { BarLoader } from \"react-spinners\";\nimport { Loader } from \"../Loader/Loader\";\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.05,\n    },\n  },\n};\nexport const TokenCardList = (props) => {\n  const { state: tokensState } = useContext(TokensContext);\n\n  const { loading, error, data } = useQuery(TOKENS, {\n    variables: {\n      filter: tokensState.filterBy,\n      order: tokensState.sortBy,\n      itemsOnPage: tokensState.itemsOnPage,\n    },\n  });\n\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <Styled.TokenGrid variants={container} initial=\"hidden\" animate=\"show\">\n      {data.tokens.map((token, i) => {\n        return (\n          <Link to={`/tokens/${token.id}`}>\n            <TokenCard index={i + 1} token={token} />\n          </Link>\n        );\n      })}\n    </Styled.TokenGrid>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { setSelectedPair } from \"../../context/actionNames\";\nimport { PairsContext } from \"../../context/PairsContext\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport { Card } from \"../Card/Card\";\nexport function TokenTable({ tableData }) {\n  console.log(\"token data \", tableData);\n  // id\n  // symbol\n  // name\n  // tradeVolume\n  // txCount\n  // tradeVolumeUSD\n  // totalLiquidity\n  const columns = React.useMemo(\n    () => [\n      // {\n      //   Header: \"Pair\",\n      //   accessor: (row) => {\n      //     return (\n      //       <div>\n      //         <Link to={`/pairs/${row.id}`}>\n      //           {row.token0.symbol} - {row.token1.symbol}\n      //         </Link>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        Header: \"Symbol\",\n        accessor: \"symbol\",\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Trade Volume \",\n        accessor: (row) => (\n          <div>{formatNumber(parseFloat(row.tradeVolume).toFixed(2))} </div>\n        ),\n      },\n      {\n        Header: \"Tx's\",\n        accessor: (row) => <div>{formatNumber(parseFloat(row.txCount))} </div>,\n      },\n      {\n        Header: \"Trade Volume USD\",\n        accessor: (row) => (\n          <div>{formatNumber(parseFloat(row.tradeVolumeUSD).toFixed(2))} </div>\n        ),\n      },\n    ],\n    []\n  );\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data: tableData }, useSortBy);\n\n  return (\n    <Card>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  style={{\n                    borderBottom: \"var(--border)\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr\n                {...row.getRowProps()}\n                // className={row.id === pairState.selectedPair ? \"active\" : \"\"}\n                // onClick={() =>\n                //   pairDispatch({ type: setSelectedPair, payload: row.id })\n                // }\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    // <Link to={`/pairs/${row.id}`}>\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: \"10px\",\n                        // border: \"solid 1px gray\",\n                        //   background: \"papayawhip\",\n                      }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                    // </Link>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Card>\n  );\n}\n","import { gql } from \"@apollo/client\";\nexport const TOKENS = gql`\n  query Tokens($filter: String) {\n    tokens(\n      first: 150\n      orderBy: $filter\n      orderDirection: desc\n      where: { tradeVolumeUSD_gt: 20000 , txCount_gt : 500 }\n    ) {\n      id\n      symbol\n      name\n      tradeVolume\n      txCount\n      tradeVolumeUSD\n      totalLiquidity\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const FlexSpaced = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { gql } from \"@apollo/client\";\n\nexport const TOKEN_DETAILS = gql`\n  query TokenDayDatas($id: String!) {\n    tokenDayDatas(\n      orderBy: date\n      orderDirection: desc\n      first: $numberOfItems\n      where: { token: $id }\n    ) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }\n`;\n","import {\n  ResponsiveContainer,\n  AreaChart,\n  XAxis,\n  YAxis,\n  Area,\n  Tooltip,\n} from \"recharts\";\nimport React from \"react\";\n\nexport default function Chart({ chartData, xKey, yKey, yKey1 }) {\n  //  FIXME: create dynamic reverser for token or pair day datas\n  // const reverseData = [...chartData.reverse()];\n\n  // For time charts\n  const getTimeAxis = (data) => {\n    const milliseconds = data.date * 1000;\n    const newDate = new Date(milliseconds);\n    const formattedDate = newDate.toISOString().split(\"T\")[0];\n    return formattedDate;\n  };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <AreaChart data={chartData}>\n        <defs>\n          <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"#2c88ff\" stopOpacity={0.4} />\n            <stop offset=\"75%\" stopColor=\"#2c88ff\" stopOpacity={0.05} />\n          </linearGradient>\n        </defs>\n\n        <Area dataKey={yKey} stroke=\"#96a0f7\" fill=\"url(#color)\" />\n        <XAxis dataKey={getTimeAxis} axisLine={true} tickLine={false} />\n        <YAxis\n          type=\"number\"\n          domain={[\"auto\", \"auto\"]}\n          datakey={yKey}\n          axisLine={false}\n          tickLine={false}\n          tickCount={100}\n        />\n\n        <Tooltip />\n\n        {/* <CartesianGrid opacity={0.1} vertical={false} /> */}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport { TOKEN_DETAILS } from \"./queries\";\nimport { TokensContext } from \"../../context/TokensContext\";\nimport React, { useContext } from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { BarLoader } from \"react-spinners\";\nimport ContentLoader from \"react-content-loader\";\nimport { Loader } from \"../Loader/Loader\";\nexport const TokenChart = ({ numberOfItems }) => {\n  const TokenContext = useContext(TokensContext);\n  const { state: tokenState } = TokenContext;\n  const { loading, error, data } = useQuery(TOKEN_DETAILS, {\n    variables: { id: tokenState.selectedToken, numberOfItems: numberOfItems },\n  });\n\n  if (loading)\n    return (\n      <div>\n        <Loader />\n        <br />\n      </div>\n    );\n\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <Chart chartData={data.tokenDayDatas} yKey={\"priceUSD\"} />\n    </div>\n  );\n};\n","import { gql } from \"@apollo/client\";\nexport const TOKEN_PAIRS = gql`\n  query TokenDayDatas($id: String!) {\n    pairs(\n      orderBy: volumeUSD\n      orderDirection: desc\n      first: 4\n      where: { token0: $id }\n    ) {\n      id\n      volumeUSD\n      token0 {\n        symbol\n      }\n      token1 {\n        symbol\n      }\n    }\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { TOKEN_PAIRS } from \"./queries\";\nimport { TokensContext } from \"../../context/TokensContext\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport { Link } from \"react-router-dom\";\nimport { Loader } from \"../Loader/Loader\";\nimport { PairCard } from \"../PairCard/PairCard\";\n\nexport const TokenPairs = () => {\n  const { state: tokenState, dispatch: tokenDispatch } =\n    useContext(TokensContext);\n\n  console.log(\"context \", useContext(TokensContext));\n  const { loading, error, data } = useQuery(TOKEN_PAIRS, {\n    variables: { id: tokenState.selectedToken },\n  });\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div className=\"pairs\">\n      {data.pairs.map((pair) => (\n        <Link to={`/pairs/${pair.id}`}>\n          <PairCard pair={pair} />\n        </Link>\n      ))}\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const TokenAggregateGrid = styled.div`\n  display: grid;\n  width: 100%;\n  gap: 10px;\n  grid-template-columns: 2fr 1fr;\n  .transparent-card:nth-of-type(3) {\n    /* grid-column: 1/3; */\n  }\n`;\nexport const LeftTopGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  gap: 10px;\n`;\nexport const LeftGrid = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr;\n  gap: 10px;\n`;\nexport const FlexSpaced = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const DetailsGrid = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto;\n  gap: 10px;\n  height: 100%;\n  /* align-items: center; */\n`;\nexport const DetailsGridItem = styled.div`\n  /* background-color: pink; */\n  border-radius: var(--border-radius);\n  height: 100%;\n`;\n","import { gql } from \"@apollo/client\";\nexport const TOKEN_DETAILS = gql`\n  query TokenDetails($id: String!) {\n    token(id: $id) {\n      name\n      symbol\n      derivedETH\n      tradeVolumeUSD\n      totalLiquidity\n      txCount\n      \n    }\n  }\n`;\n\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { setSelectedPair } from \"../../context/actionNames\";\nimport { PairsContext } from \"../../context/PairsContext\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport { Card } from \"../Card/Card\";\nexport function PairTable({ tableData }) {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Pair\",\n        accessor: (row) => {\n          return (\n            <div>\n              <Link to={`/pairs/${row.id}`}>\n                {row.token0.symbol} - {row.token1.symbol}\n              </Link>\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"TX Count\",\n        accessor: (row) => <div>{formatNumber(parseFloat(row.txCount))} </div>,\n      },\n      {\n        Header: \"Volume USD\",\n        accessor: (row) => (\n          <div>$ {formatNumber(parseFloat(row.volumeUSD).toFixed(2))} </div>\n        ),\n      },\n      {\n        Header: \"Reserve ETH\",\n        accessor: (row) => (\n          <div>{formatNumber(parseFloat(row.reserveETH).toFixed(2))} </div>\n        ),\n      },\n      {\n        Header: \"Reserve USD\",\n        accessor: (row) => (\n          <div>{formatNumber(parseFloat(row.reserveUSD).toFixed(2))} </div>\n        ),\n      },\n    ],\n    []\n  );\n  const { state: pairState, dispatch: pairDispatch } = useContext(PairsContext);\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data: tableData }, useSortBy);\n\n  return (\n    <Card>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  style={{\n                    borderBottom: \"var(--border)\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" 🔽\"\n                        : \" 🔼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr\n                {...row.getRowProps()}\n                className={row.id === pairState.selectedPair ? \"active\" : \"\"}\n                onClick={() =>\n                  pairDispatch({ type: setSelectedPair, payload: row.id })\n                }\n              >\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: \"10px\",\n                      }}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Card>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const PAIRS = gql`\n  query Pairs($filter: String, $order: String, $itemsOnPage: Int) {\n    pairs(first: 30, orderBy: txCount, orderDirection: desc) {\n      id\n      txCount\n      volumeUSD\n      reserveETH\n      reserveUSD\n      token0 {\n        id\n        symbol\n      }\n      token1 {\n        id\n        symbol\n      }\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const FlexSpaced = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { TokensContextProvider } from \"./context/TokensContext\";\nimport { TokenContextProvider } from \"./context/TokenContext\";\n\nimport { ThemeContextProvider } from \"./context/ThemeContext\";\nimport \"./App.css\";\nimport { PairList } from \"./components/PairList/PairList\";\nimport { Layout } from \"./components/Layout/Layout\";\nimport { PairsContextProvider } from \"./context/PairsContext\";\nimport { PairAggregate } from \"./views/PairAggregate/PairAggregate\";\nimport { TokensView } from \"./views/Tokens\";\nimport { TokenAggregate } from \"./views/TokenAggregate/TokenAggregate\";\nimport { Pairs } from \"./views/Pairs/Pairs\";\n\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2\",\n  cache: new InMemoryCache(),\n});\n\nconst routes = [\n  {\n    path: \"/pairs\",\n    component: Pairs,\n    routes: [\n      {\n        path: \"/pairs/:pairID\",\n        component: PairAggregate,\n      },\n    ],\n  },\n  {\n    path: \"/tokens\",\n    component: TokensView,\n    routes: [\n      {\n        path: \"/tokens/:tokenID\",\n        component: TokenAggregate,\n      },\n    ],\n  },\n];\n\nexport function RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={(props) => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nrender(\n  <ApolloProvider client={client}>\n    <TokensContextProvider>\n      <PairsContextProvider>\n        <TokenContextProvider>\n          <ThemeContextProvider>\n            <Router>\n              <Layout>\n                <Switch>\n                  {routes.map((route, i) => (\n                    <RouteWithSubRoutes key={i} {...route} />\n                  ))}\n                </Switch>\n              </Layout>\n            </Router>\n          </ThemeContextProvider>\n        </TokenContextProvider>\n      </PairsContextProvider>\n    </TokensContextProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { RouteWithSubRoutes } from \"../..\";\nimport { Button } from \"../../components/Button/Button\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { PairList } from \"../../components/PairList/PairList\";\nimport { PairTable } from \"../../components/PairTable/PairTable\";\nimport { PAIRS } from \"./queries\";\nimport * as Styled from \"./styles\";\n\nexport function Pairs({ routes }) {\n  const viewTypes = [\n    { id: \"table\", text: \"Table\", icon: \"\" },\n    { id: \"cards\", text: \"Cards\", icon: \"\" },\n  ];\n\n  const [viewType, setViewType] = React.useState({\n    id: \"table\",\n    text: \"Table\",\n    icon: \"\",\n  });\n  const { loading, error, data } = useQuery(PAIRS);\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <h3>Pairs</h3>\n\n      <Switch>\n        {routes.map((route, i) => (\n          <RouteWithSubRoutes key={i} {...route} />\n        ))}\n      </Switch>\n      <Styled.FlexSpaced>\n        <h3>Most Traded</h3>\n        <div>\n          {viewTypes.map((type) => {\n            return (\n              <Button\n                isActive={viewType.id === type.id}\n                onClick={() => setViewType(type)}\n              >\n                {type.text}\n              </Button>\n            );\n          })}\n        </div>\n      </Styled.FlexSpaced>\n      {viewType.id === \"table\" && <PairTable tableData={data.pairs} />}\n      {viewType.id === \"cards\" && <PairList data={data} />}\n    </div>\n  );\n}\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { BarCharts } from \"../../components/BarCharts/BarCharts\";\nimport { Card } from \"../../components/Card/Card\";\nimport { FlexContainer } from \"../../components/FlexContainer/FlexContainer\";\nimport { RecentSwaps } from \"../../components/RecentSwaps/RecentSwaps\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport { PAIR_AGGREGATE } from \"./queries\";\nimport * as Styled from \"./styles\";\nimport { Loader } from \"../../components/Loader/Loader\";\nexport const PairAggregate = () => {\n  const { pairID } = useParams();\n\n  const { loading, error, data } = useQuery(PAIR_AGGREGATE, {\n    variables: { id: pairID },\n  });\n\n  React.useEffect(() => {\n    // window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }, [pairID]);\n\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n\n  const { pairDayDatas, pair } = data;\n  console.log(\"pair da\", pairDayDatas);\n  return (\n    <Styled.AggregateGrid>\n      <Styled.AggregateLeft>\n        <Styled.PairSpecs>\n          <Link to={`/tokens/${pair.token0.id}`}>\n            <Card height=\"100%\">\n              <div className=\"large-text\">{pair.token0.symbol}</div>\n              <div>{formatNumber(parseFloat(pair.reserve0).toFixed(2))} </div>\n            </Card>\n          </Link>\n          <Link to={`/tokens/${pair.token1.id}`}>\n            <Card height=\"100%\">\n              <div className=\"large-text\">{pair.token1.symbol}</div>\n              <div>{formatNumber(parseFloat(pair.reserve1).toFixed(2))} </div>\n            </Card>\n          </Link>\n\n          <Card height=\"100%\">\n            <Styled.InfoCard>\n              <div className=\"bold\">Volume: </div>\n              <div>${formatNumber(parseFloat(pair.volumeUSD).toFixed(2))}</div>\n              <div className=\"bold\"> 24h V:</div>\n              <div>\n                {formatNumber(\n                  parseFloat(pairDayDatas[0].dailyVolumeToken0).toFixed(2)\n                )}\n              </div>\n              <div className=\"bold\"> Reserve: </div>\n              <div>${formatNumber(parseFloat(pair.reserveUSD).toFixed(2))}</div>\n            </Styled.InfoCard>\n          </Card>\n        </Styled.PairSpecs>\n        <Card height=\"100%\">\n          <FlexContainer>\n            {/* <Button onClick={() => setSelectedFilter(\"dailyTxns\")}>\n            Daily Transactions\n          </Button> */}\n          </FlexContainer>\n          <BarCharts\n            yValue1={pairDayDatas.dailyVolumeToken0}\n            yValue2={pairDayDatas.dailyVolumeToken1}\n            chartData={pairDayDatas}\n          />\n        </Card>\n      </Styled.AggregateLeft>\n\n      <Card height=\"100%\">\n        <div className=\"medium-text\">Recent Swaps</div>\n        <RecentSwaps id={pair.id} />\n      </Card>\n    </Styled.AggregateGrid>\n  );\n};\n","import { useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { RouteWithSubRoutes } from \"../..\";\nimport { Button } from \"../../components/Button/Button\";\nimport { FilterButtons } from \"../../components/FilterButtons/FilterButtons\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { Swap } from \"../../components/Swap/Swap\";\nimport { TokenCardList } from \"../../components/TokenCardList/TokenCardList\";\nimport { TokenTable } from \"../../components/TokenTable/TokenTable\";\nimport { TOKENS } from \"./queries\";\nimport * as Styled from \"./styles\";\n\nexport function TokensView({ routes }) {\n  // FIXME: ADD TIME FILTER TO CHARTS\n  const [numberOfDays, setNumberOfDays] = React.useState({\n    value: 50,\n    name: 50,\n  });\n  const viewTypes = [\n    { id: \"table\", text: \"Table\", icon: \"\" },\n    { id: \"cards\", text: \"Cards\", icon: \"\" },\n  ];\n\n  const [viewType, setViewType] = React.useState({\n    id: \"table\",\n    text: \"Table\",\n    icon: \"\",\n  });\n\n  const { loading, error, data } = useQuery(TOKENS);\n  if (loading) return <Loader />;\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <h2>Tokens</h2>\n      <Switch>\n        {routes.map((route, i) => (\n          <RouteWithSubRoutes key={i} {...route} />\n        ))}\n      </Switch>\n      <br />\n      <Styled.FlexSpaced>\n        {/* <FilterButtons /> */}\n        <h3>Most Traded</h3>\n        <div>\n          {viewTypes.map((type) => {\n            return (\n              <Button\n                isActive={viewType.id === type.id}\n                onClick={() => setViewType(type)}\n              >\n                {type.text}\n              </Button>\n            );\n          })}\n        </div>\n      </Styled.FlexSpaced>\n\n      {viewType.id === \"table\" && <TokenTable tableData={data.tokens} />}\n      {viewType.id === \"cards\" && <TokenCardList />}\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Card } from \"../../components/Card/Card\";\nimport { TokenChart } from \"../../components/TokenChart/TokenChart\";\nimport { TokenPairs } from \"../../components/TokenPairs/TokenPairs\";\nimport { Button } from \"../../components/Button/Button\";\nimport { SwapWidget } from \"@uniswap/widgets/dist/index.js\";\nimport { useParams } from \"react-router-dom\";\nimport * as Styled from \"./styles\";\nimport { setSelectedToken } from \"../../context/actionNames\";\nimport { TokensContext } from \"../../context/TokensContext\";\nimport { useQuery } from \"@apollo/client\";\nimport { Loader } from \"../../components/Loader/Loader\";\nimport { TOKEN_DETAILS } from \"./queries\";\nimport formatNumber from \"../../utils/formatNumber\";\nimport Modal from \"../../components/Modal/Modal\";\nimport { darkTheme, lightTheme } from \"@uniswap/widgets\";\n\nexport const TokenAggregate = () => {\n  const modalRef = React.useRef();\n\n  const openModal = () => {\n    modalRef.current.openModal();\n  };\n  const { tokenID } = useParams();\n  const { state: tokensState, dispatch } = useContext(TokensContext);\n  const { loading, error, data } = useQuery(TOKEN_DETAILS, {\n    variables: { id: tokenID },\n  });\n  React.useEffect(() => {\n    dispatch({ type: setSelectedToken, payload: tokenID });\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  }, [tokenID]);\n  if (loading) return <Loader />;\n\n  if (error) return `Error! ${error.message}`;\n  const { name, symbol, tradeVolumeUSD, totalLiquidity, txCount } = data.token;\n  return (\n    <>\n      <Modal ref={modalRef}>\n        <SwapWidget\n          defaultOutputTokenAddress={tokenID}\n          theme={true ? darkTheme : lightTheme}\n        />\n        {/* <button onClick={() => modalRef.current.close()}>Close Modal</button> */}\n      </Modal>\n      <Styled.TokenAggregateGrid>\n        <Styled.LeftGrid>\n          <Styled.LeftTopGrid>\n            <Card>\n              <div className=\"large-text\">{symbol}</div>\n              <div className=\"medium-text\">{name}</div>\n              <div className=\"detail-links\">\n                <a\n                  target=\"_blank\"\n                  // href={`https://www.coingecko.com/en/coins/${tokenId}`}\n                >\n                  <img\n                    id=\"coingecko\"\n                    src=\"https://static.coingecko.com/s/coingecko-logo-d13d6bcceddbb003f146b33c2f7e8193d72b93bb343d38e392897c3df3e78bdd.png\"\n                    alt=\"\"\n                  />\n                </a>\n                <a\n                  target=\"_blank\"\n                  // href={`https://etherscan.io/address/${tokenId}`}\n                >\n                  <img\n                    src=\"https://etherscan.io/images/logo-ether.png?v=0.0.2\"\n                    alt=\"\"\n                  />\n                </a>\n              </div>\n            </Card>\n            <Card height={\"100%\"}>\n              <Styled.DetailsGrid>\n                <Styled.DetailsGridItem>\n                  <Card transparent height=\"100%\">\n                    <div className=\"medium-text\"> Vol:</div>\n                    <div>\n                      ${formatNumber(parseFloat(tradeVolumeUSD).toFixed(2))}\n                    </div>\n                  </Card>\n                </Styled.DetailsGridItem>\n                <Styled.DetailsGridItem>\n                  <Card transparent height=\"100%\">\n                    <div className=\"medium-text\"> Liq:</div>\n                    <div>\n                      {formatNumber(parseFloat(totalLiquidity).toFixed(2))}{\" \"}\n                    </div>\n                  </Card>\n                </Styled.DetailsGridItem>\n                <Styled.DetailsGridItem>\n                  <Card transparent height=\"100%\">\n                    <div className=\"medium-text\"> TX's:</div>\n                    <div>{formatNumber(parseFloat(txCount))}</div>\n                  </Card>\n                </Styled.DetailsGridItem>\n              </Styled.DetailsGrid>\n            </Card>\n          </Styled.LeftTopGrid>\n\n          <Card>\n            <h3>Price</h3>\n            <TokenChart />\n          </Card>\n        </Styled.LeftGrid>\n\n        <div>\n          <Card>\n            <div className=\"medium-text\">Top Pairs</div>\n            <TokenPairs />\n          </Card>\n          <br />\n          <Button width=\"100%\" onClick={openModal}>\n            Trade\n          </Button>\n        </div>\n      </Styled.TokenAggregateGrid>\n    </>\n  );\n};\n"],"sourceRoot":""}